openapi: 3.0.3
info:
  title: EBATS Headless Intake API
  version: 0.1.0
servers:
  - url: https://api.ebats.com.au/v1
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    IntakeStatus:
      type: string
      enum: [draft, submitted, in_review, awaiting_client, lodged, complete, rejected]
    CommonIdentity:
      type: object
      properties:
        full_name: { type: string }
        dob: { type: string, format: date }
        email: { type: string, format: email }
        mobile: { type: string }
        residential_address: { type: string }
        postal_address: { type: string }
        tfn: { type: string, description: "Masked in responses; encrypted at rest" }
        abn: { type: string, nullable: true }
        consent_tfn: { type: boolean }
        consent_privacy: { type: boolean }
        consent_engagement: { type: boolean }
      required: [full_name, dob, email, mobile, residential_address, consent_privacy]
paths:
  /intake/individual:
    post:
      summary: Create or update individual intake
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identity:
                  $ref: '#/components/schemas/CommonIdentity'
                payload:
                  type: object
                  additionalProperties: true
                attachments:
                  type: array
                  items:
                    type: string
                    format: uri
              required: [identity]
      responses:
        '201':
          description: Created
  /intake/company:
    post:
      summary: Create or update company intake
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '201': { description: Created }
  /intake/partnership:
    post:
      summary: Create or update partnership intake
      requestBody:
        required: true
        content:
          application/json:
            schema: { type: object, additionalProperties: true }
      responses:
        '201': { description: Created }
  /intake/trust:
    post:
      summary: Create or update trust intake
      requestBody:
        required: true
        content:
          application/json:
            schema: { type: object, additionalProperties: true }
      responses:
        '201': { description: Created }
  /intake/smsf:
    post:
      summary: Create or update SMSF setup intake
      requestBody:
        required: true
        content:
          application/json:
            schema: { type: object, additionalProperties: true }
      responses:
        '201': { description: Created }
  /intake/{id}:
    get:
      summary: Get an intake
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
  /intake/{id}/status:
    patch:
      summary: Update status
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/IntakeStatus'
      responses:
        '200': { description: OK }
  /webhooks/ebats:
    post:
      summary: Receive webhook events from backend (for WP)
      responses:
        '200': { description: OK }